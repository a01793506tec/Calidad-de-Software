# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fJP4GFnyD2dhBN57ML9aVxCMrVioYnvQ
"""

import argparse
import time

def contar_palabras(parchivo):
    """ Funcion para contar palabras"""
    ocurrencias = {}

    # Abrir el archivo en modo lectura
    with open(parchivo, 'r', encoding='utf-8') as f:
        # Leer el contenido del archivo línea por línea
        for linea in f:
            # Dividir la línea en palabras
            palabrasl = linea.split()
            # Iterar sobre cada palabra y contar su ocurrencia
            for ppalabra in palabrasl:
                # Eliminar signos de puntuación y convertir a minúsculas
                ppalabra = ppalabra.strip('.,!?').lower()
                # Incrementar el contador de la palabra en el diccionario
                ocurrencias[ppalabra] = ocurrencias.get(ppalabra, 0) + 1

    return ocurrencias


if __name__ == "__main__":
    inicio = time.time()
    with open('WordCountResults.txt', 'w', encoding='utf-8') as archivo:
        parser = argparse.ArgumentParser(description='Procesar un archivo de texto.')
        parser.add_argument('archivo', help='Ruta del archivo de texto a procesar')
        args = parser.parse_args()
        ARCH = 'FileWithData.txt'
        resultado = contar_palabras(ARCH)
        for palabra, ocurrencia in resultado.items():
            print(f'{palabra}, ocurre: {ocurrencia} veces')
            archivo.write(f"Palabra {palabra} tiene ocurrencia {ocurrencia} veces\n")

        TOTAL = 0
        TOTAL += 1

        print("El total de elementos es:", TOTAL)
        archivo.write(f"El total de elementos es:{TOTAL}\n")
        fin = time.time()
        tiempo_total = fin - inicio
        print("El tiempo de ejecución fue de:", tiempo_total, "segundos")
        archivo.write(f"El tiempo de ejecución fue de:{tiempo_total}")
        